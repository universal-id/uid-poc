# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  DotNetVersion: 6.0.100
  DotNet.Cli.Telemetry.OptOut: true
  MauiCheck.Version: 0.10.0
  LogDirectory: $(Build.ArtifactStagingDirectory)\logs
  System.Debug: true

steps:

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Azure for startups(0c7c832b-f1c2-4926-8e90-c6e869b07ff2)'
    KeyVaultName: 'uid-poc-dev'
    SecretsFilter: '*'
    RunAsPreJob: true

- script: echo "$(testMnemonic)"
- script: echo "$(testInfuraProjectId)"

- powershell: | 
    $pathToJson = "source/library-test/appsettings.json"
    $appSettings = Get-Content $pathToJson | ConvertFrom-Json
    $appSettings.TestMnemonic = "$(testMnemonic)"
    $appSettings.TestInfuraProjectId = "$(testInfuraProjectId)"
    $appSettings | ConvertTo-Json | set-content $pathToJson
  displayName: 'Update AppSettings file before testing'

- script: type "source/library-test/appsettings.json"
- script: echo "$(testMnemonic)"
- script: echo "$(testInfuraProjectId)"


- task: CmdLine@2
  inputs:
    script: 'echo $(testMnemonic) > secret.txt'

- task: CopyFiles@2
  inputs:
    Contents: secret.txt
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '$(DotNetVersion)'

# - powershell: |
#     & dotnet tool update --global redth.net.maui.check --version $(MauiCheck.Version)
#     & maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --skip edgewebview2
#   displayName: Perform maui-check
#   errorActionPreference: stop
  
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: Install Java SDK 11
  
- powershell: |
    & dotnet workload install maui 
  displayName: Install MAUI workload
  errorActionPreference: stop

- task: DotNetCoreCLI@2
  displayName: Restore NuGet packages
  inputs:
    command: restore
    projects: '$(solution)'

# - powershell: |
#     & dotnet build source\Library.sln -c Debug   -bl:$(LogDirectory)\Debug.binlog
#     & dotnet build source\offline-poc\OfflinePoc.sln -c Debug   -bl:$(LogDirectory)\Debug.binlog
#     & dotnet build source\online-poc\OnlinePoc.sln -c Debug   -bl:$(LogDirectory)\Debug.binlog
#   displayName: Build all solutions in Debug
#   errorActionPreference: stop

# - powershell: |
#     & dotnet build source\Library.sln -c Release -bl:$(LogDirectory)\Release.binlog
#     & dotnet build source\offline-poc\OfflinePoc.sln -c Release -bl:$(LogDirectory)\Release.binlog
#     & dotnet build source\online-poc\OnlinePoc.sln -c Release -bl:$(LogDirectory)\Release.binlog
#   displayName: Build all solutions in Release
#   errorActionPreference: stop

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(solution)'
    publishTestResults: true
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
